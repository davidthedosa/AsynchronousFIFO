`timescale 1ns / 1ps

module tb_dual_port_ram;

    reg wr_clk = 0, wr_en = 0;
    reg rd_clk = 0, rd_en = 0;
    reg [3:0] wr_addr = 0, rd_addr = 0;
    reg [7:0] wr_data = 0;
    wire [7:0] rd_data;

    dual_port_ram uut (
        .wr_clk(wr_clk), .wr_en(wr_en), .wr_addr(wr_addr), .wr_data(wr_data),
        .rd_clk(rd_clk), .rd_en(rd_en), .rd_addr(rd_addr), .rd_data(rd_data)
    );

    // Write clock: 10ns period
    always #5 wr_clk = ~wr_clk;

    // Read clock: 16ns period (different domain)
    always #8 rd_clk = ~rd_clk;

    initial begin
        $display("Starting Dual-Port RAM Test");
        $dumpfile("dump.vcd");
        $dumpvars(0, tb_dual_port_ram);

        #10;
        wr_en = 1;
        wr_data = 8'hA5; wr_addr = 4'd3;
        #10 wr_data = 8'h5A; wr_addr = 4'd4;
        #10 wr_en = 0;

        #10;
        rd_en = 1;
        rd_addr = 4'd3;
        #16 rd_addr = 4'd4;
        #16 rd_en = 0;

        #20 $finish;
    end
endmodule
